// Generated by 'peg2'
// https://pub.dev/packages/peg2

void main() {
  final parser = ExampleParser();
  final result = parser.parse(_text);
  if (parser.error != null) {
    throw parser.error;
  }

  print(result);
}

final _text = '''
{"rocket": "ðŸš€ flies to the stars"}
''';

class ExampleParser {
  static const _eof = 0x110000;

  FormatException error;

  int _c;

  List<String> _failures;

  int _fcount;

  int _fposEnd;

  int _fposMax;

  int _fposStart;

  List<int> _input;

  List<bool> _memoizable;

  List<List<_Memo>> _memos;

  var _mresult;

  int _pos;

  bool _predicate;

  dynamic _result;

  bool _success;

  String _text;

  List<int> _trackCid;

  List<int> _trackPos;

  dynamic parse(String text) {
    if (text == null) {
      throw ArgumentError.notNull('text');
    }
    _text = text;
    _input = _toRunes(text);
    _reset();
    final result = _e0(0, true);
    _buildError();
    _failures = null;
    _input = null;
    return result;
  }

  void _buildError() {
    if (_success) {
      error = null;
      return;
    }

    String escape(int c) {
      switch (c) {
        case 10:
          return r'\n';
        case 13:
          return r'\r';
        case 09:
          return r'\t';
        case _eof:
          return 'end of file';
      }
      return String.fromCharCode(c);
    }

    String getc(int position) {
      if (position < _text.length) {
        return "'${escape(_input[position])}'";
      }
      return 'end of file';
    }

    String report(String message, String source, int start) {
      if (start < 0 || start > source.length) {
        start = null;
      }

      final sb = StringBuffer();
      sb.write(message);
      var line = 0;
      var col = 0;
      var lineStart = 0;
      var started = false;
      if (start != null) {
        for (var i = 0; i < source.length; i++) {
          final c = source.codeUnitAt(i);
          if (!started) {
            started = true;
            lineStart = i;
            line++;
            col = 1;
          } else {
            col++;
          }
          if (c == 10) {
            started = false;
          }
          if (start == i) {
            break;
          }
        }
      }

      if (start == null) {
        sb.writeln('.');
      } else if (line == 0 || start == source.length) {
        sb.writeln(' (at end of file):');
      } else {
        sb.write(' (at line ');
        sb.write(line);
        sb.write(', column ');
        sb.write(col);
        sb.writeln('):');
      }

      List<int> escape(int c) {
        switch (c) {
          case 9:
            return [92, 116];
          case 10:
            return [92, 110];
          case 13:
            return [92, 114];
          default:
            return [c];
        }
      }

      const max = 70;
      if (start != null) {
        final c1 = <int>[];
        final c2 = <int>[];
        final half = max ~/ 2;
        var cr = false;
        for (var i = start; i >= lineStart && c1.length < half; i--) {
          if (i == source.length) {
            c2.insert(0, 94);
          } else {
            final c = source.codeUnitAt(i);
            final escaped = escape(c);
            c1.insertAll(0, escaped);
            if (c == 10) {
              cr = true;
            }

            var r = i == start ? 94 : 32;
            for (var k = 0; k < escaped.length; k++) {
              c2.insert(0, r);
            }
          }
        }

        for (var i = start + 1;
            i < source.length && c1.length < max && !cr;
            i++) {
          final c = source.codeUnitAt(i);
          final escaped = escape(c);
          c1.addAll(escaped);
          if (c == 10) {
            break;
          }
        }

        var text1 = String.fromCharCodes(c1);
        var text2 = String.fromCharCodes(c2);
        sb.writeln(text1);
        sb.writeln(text2);
      }

      return sb.toString();
    }

    final temp = _failures.take(_fcount).toList();
    temp.sort((e1, e2) => e1.compareTo(e2));
    final terminals = temp.toSet();
    final hasMalformed = _fposStart != _fposMax;
    if (terminals.isNotEmpty) {
      if (!hasMalformed) {
        final sb = StringBuffer();
        sb.write('Expected ');
        sb.write(terminals.join(', '));
        sb.write(' but found ');
        sb.write(getc(_fposStart));
        final title = sb.toString();
        final message = report(title, _text, _fposStart);
        error = FormatException(message);
      } else {
        final reason = _fposMax == _text.length ? 'Unterminated' : 'Malformed';
        final sb = StringBuffer();
        sb.write(reason);
        sb.write(' ');
        sb.write(terminals.join(', '));
        final title = sb.toString();
        final message = report(title, _text, _fposStart);
        error = FormatException(message);
      }
    } else {
      final sb = StringBuffer();
      sb.write('Unexpected character ');
      sb.write(getc(_fposStart));
      final title = sb.toString();
      final message = report(title, _text, _fposStart);
      error = FormatException(message);
    }
  }

  void _fail(int start, String name) {
    if (_fposStart < start) {
      _fposStart = start;
      _fposMax = _fposEnd;
      _fcount = 0;
    } else if (_fposMax < _fposEnd) {
      _fposStart = start;
      _fposMax = _fposEnd;
      _fcount = 0;
    }

    if (_fposStart == start && _fposEnd == _fposMax) {
      if (_fcount >= _failures.length) {
        _failures.length += 20;
      }

      _failures[_fcount++] = name;
    }
  }

  int _matchRanges(List<int> ranges) {
    int result;
    _success = false;
    for (var i = 0; i < ranges.length; i += 2) {
      if (ranges[i] <= _c) {
        if (ranges[i + 1] >= _c) {
          result = _c;
          _c = _input[_pos += _c <= 0xffff ? 1 : 2];
          _success = true;
          break;
        }
      } else {
        break;
      }
    }

    if (!_success && _fposEnd < _pos) {
      _fposEnd = _pos;
    }

    return result;
  }

  String _matchString(String text) {
    String result;
    final length = text.length;
    final rest = _text.length - _pos;
    final count = length > rest ? rest : length;
    var pos = _pos;
    var i = 0;
    for (; i < count; i++, pos++) {
      if (text.codeUnitAt(i) != _text.codeUnitAt(pos)) {
        break;
      }
    }

    if (i == length) {
      _c = _input[_pos += length];
      _success = true;
      result = text;
    } else {
      _success = false;
      if (_fposEnd < _pos) {
        _fposEnd = _pos + i;
      }
    }

    return result;
  }

  bool _memoized(int id, int cid) {
    final memos = _memos[_pos];
    if (memos != null) {
      for (var i = 0; i < memos.length; i++) {
        final memo = memos[i];
        if (memo.id == id) {
          _pos = memo.pos;
          _mresult = memo.result;
          _success = memo.success;
          _c = _input[_pos];
          return true;
        }
      }
    }

    if (_memoizable[cid] != null) {
      return false;
    }

    var lastCid = _trackCid[id];
    var lastPos = _trackPos[id];
    _trackCid[id] = cid;
    _trackPos[id] = _pos;
    if (lastCid == null) {
      return false;
    }

    if (lastPos == _pos) {
      if (lastCid != cid) {
        _memoizable[lastCid] = true;
        _memoizable[cid] = false;
      }
    }

    return false;
  }

  void _memoize(int id, int pos, result) {
    var memos = _memos[pos];
    if (memos == null) {
      memos = [];
      _memos[pos] = memos;
    }

    final memo = _Memo(
      id: id,
      pos: _pos,
      result: result,
      success: _success,
    );

    memos.add(memo);
  }

  void _reset() {
    _c = _input[0];
    _failures = [];
    _failures.length = 20;
    _fcount = 0;
    _fposEnd = -1;
    _fposMax = -1;
    _fposStart = -1;
    _memoizable = [];
    _memoizable.length = 187;
    _memos = [];
    _memos.length = _input.length + 1;
    _pos = 0;
    _predicate = false;
    _trackCid = [];
    _trackCid.length = 187;
    _trackPos = [];
    _trackPos.length = 187;
  }

  List<int> _toRunes(String source) {
    final length = source.length;
    final result = List<int>(length + 1);
    for (var pos = 0; pos < length;) {
      int c;
      final start = pos;
      final leading = source.codeUnitAt(pos++);
      if ((leading & 0xFC00) == 0xD800 && pos < length) {
        final trailing = source.codeUnitAt(pos);
        if ((trailing & 0xFC00) == 0xDC00) {
          c = 0x10000 + ((leading & 0x3FF) << 10) + (trailing & 0x3FF);
          pos++;
        } else {
          c = leading;
        }
      } else {
        c = leading;
      }

      result[start] = c;
    }

    result[length] = 0x110000;
    return result;
  }

  dynamic _e1(List<int> $0, bool $1) {
    dynamic $2;
    dynamic $3 = _e6(0, true);
    if (_success) {
      dynamic $4 = _e54(0, true);
      if (_success) {
        $2 = $3;
      }
    }
    return $2;
  }

  dynamic _e0(int $0, bool $1) {
    dynamic $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      int $5;
      if (_c >= 9 && _c <= 10 || _c == 13 || _c == 32) {
        _success = true;
        $5 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      List<int> $6;
      if (_success) {
        if ($1) {
          $6 = [];
        }
        for (;;) {
          int $7;
          if (_c >= 9 && _c <= 10 || _c == 13 || _c == 32) {
            _success = true;
            $7 = _c;
            _c = _input[_pos += _c <= 65535 ? 1 : 2];
          } else {
            _success = false;
            if (_fposEnd < _pos) {
              _fposEnd = _pos;
            }
          }
          if (!_success) {
            break;
          }
          if ($1) {
            $6.add($7);
          }
        }
      }
      _success = true;
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (!_success) {
        _fail($4, '\'leading spaces\'');
      }
      _success = true;
      dynamic $8;
      if (_success) {
        $8 = _e1($6, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $8;
        break;
      }
      break;
    }
    return $2;
  }

  List _e7(List $0, bool $1) {
    List $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  dynamic _e9(dynamic $0, bool $1) {
    dynamic $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  dynamic _e11(dynamic $0, bool $1) {
    dynamic $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  dynamic _e13(dynamic $0, bool $1) {
    dynamic $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  Map<String, dynamic> _e15(Map<String, dynamic> $0, bool $1) {
    Map<String, dynamic> $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  num _e17(num $0, bool $1) {
    num $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  String _e19(String $0, bool $1) {
    String $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  dynamic _e6(int $0, bool $1) {
    dynamic $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      _success = _c == 91;
      if (_success) {
        $5 = '[';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $6;
      if (_success) {
        $6 = _e116($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'[\'');
      }
      List $7;
      if (_success) {
        $7 = _e22($6, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $7;
        break;
      }
      _fposEnd = -1;
      String $8;
      if (_c == 102) {
        $8 = _matchString('false');
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      dynamic $9;
      if (_success) {
        $9 = _e59($8, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'false\'');
      }
      if (_success) {
        $2 = $9;
        break;
      }
      _fposEnd = -1;
      String $10;
      if (_c == 110) {
        $10 = _matchString('null');
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      dynamic $11;
      if (_success) {
        $11 = _e66($10, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'null\'');
      }
      if (_success) {
        $2 = $11;
        break;
      }
      _fposEnd = -1;
      String $12;
      if (_c == 116) {
        $12 = _matchString('true');
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      dynamic $13;
      if (_success) {
        $13 = _e70($12, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'true\'');
      }
      if (_success) {
        $2 = $13;
        break;
      }
      _fposEnd = -1;
      String $14;
      _success = _c == 123;
      if (_success) {
        $14 = '{';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $15;
      if (_success) {
        $15 = _e108($14, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'{\'');
      }
      Map<String, dynamic> $16;
      if (_success) {
        $16 = _e36($15, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $16;
        break;
      }
      _fposEnd = -1;
      var $17 = _pos;
      var $18 = $1;
      $1 = false;
      int $19;
      if (_c == 45) {
        _success = true;
        $19 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      _success = true;
      int $20;
      if (_success) {
        $20 = _e84($19, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      $1 = $18;
      String $21;
      if (_success) {
        $21 = _text.substring($17, _pos);
      }
      num $22;
      if (_success) {
        $22 = _e81($21, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'number\'');
      }
      if (_success) {
        $2 = $22;
        break;
      }
      _fposEnd = -1;
      String $23;
      _success = _c == 34;
      if (_success) {
        $23 = '\"';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $24;
      if (_success) {
        $24 = _e74($23, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'string\'');
      }
      if (_success) {
        $2 = $24;
        break;
      }
      break;
    }
    return $2;
  }

  String _e116(String $0, bool $1) {
    String $2;
    if (_success) {
      List<int> $3 = _e183(0, true);
      if (_success) {
        $2 = $0;
      }
    }
    return $2;
  }

  List _e22(String $0, bool $1) {
    List $2;
    if (_success) {
      List $3 = _e27(0, true);
      _success = true;
      String $4 = _e119(0, true);
      if (_success) {
        var v = $3;
        List $$;
        $$ = v ?? [];
        $2 = $$;
      }
    }
    return $2;
  }

  dynamic _e59(String $0, bool $1) {
    dynamic $2;
    if (_success) {
      List<int> $3 = _e183(0, true);
      if (_success) {
        dynamic $$;
        $$ = false;
        $2 = $$;
      }
    }
    return $2;
  }

  dynamic _e66(String $0, bool $1) {
    dynamic $2;
    if (_success) {
      List<int> $3 = _e183(0, true);
      if (_success) {
        dynamic $$;
        $$ = null;
        $2 = $$;
      }
    }
    return $2;
  }

  dynamic _e70(String $0, bool $1) {
    dynamic $2;
    if (_success) {
      List<int> $3 = _e183(0, true);
      if (_success) {
        dynamic $$;
        $$ = true;
        $2 = $$;
      }
    }
    return $2;
  }

  String _e108(String $0, bool $1) {
    String $2;
    if (_success) {
      List<int> $3 = _e183(0, true);
      if (_success) {
        $2 = $0;
      }
    }
    return $2;
  }

  Map<String, dynamic> _e36(String $0, bool $1) {
    Map<String, dynamic> $2;
    if (_success) {
      List<MapEntry<String, dynamic>> $3 = _e41(0, true);
      _success = true;
      String $4 = _e111(0, true);
      if (_success) {
        var m = $3;
        Map<String, dynamic> $$;
        $$ = <String, dynamic>{}..addEntries(m ?? []);
        $2 = $$;
      }
    }
    return $2;
  }

  int _e84(int $0, bool $1) {
    int $2;
    var $3 = _e87(0, true);
    if (_success) {
      var $4 = _e95(0, true);
      _success = true;
      var $5 = _e101(0, true);
      _success = true;
      if (_success) {
        $2 = $0;
      }
    }
    return $2;
  }

  int _e88(int $0, bool $1) {
    int $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  int _e90(int $0, bool $1) {
    int $2;
    if (_success) {
      List<int> $3;
      for (;;) {
        int $4;
        if (_c >= 48 && _c <= 57) {
          _success = true;
          $4 = _c;
          _c = _input[_pos += _c <= 65535 ? 1 : 2];
        } else {
          _success = false;
          if (_fposEnd < _pos) {
            _fposEnd = _pos;
          }
        }
        if (!_success) {
          break;
        }
      }
      _success = true;
      if (_success) {
        $2 = $0;
      }
    }
    return $2;
  }

  int _e87(int $0, bool $1) {
    int $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      int $5;
      if (_c == 48) {
        _success = true;
        $5 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $5;
        break;
      }
      int $6;
      if (_c >= 49 && _c <= 57) {
        _success = true;
        $6 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $7;
      if (_success) {
        $7 = _e90($6, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $7;
        break;
      }
      break;
    }
    return $2;
  }

  int _e96(int $0, bool $1) {
    int $2;
    if (_success) {
      List<int> $3;
      var $4 = false;
      for (;;) {
        int $5;
        if (_c >= 48 && _c <= 57) {
          _success = true;
          $5 = _c;
          _c = _input[_pos += _c <= 65535 ? 1 : 2];
        } else {
          _success = false;
          if (_fposEnd < _pos) {
            _fposEnd = _pos;
          }
        }
        if (!_success) {
          _success = $4;
          if (!_success) {
            $3 = null;
          }
          break;
        }
        $4 = true;
      }
      if (_success) {
        $2 = $0;
      }
    }
    return $2;
  }

  int _e95(int $0, bool $1) {
    int $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      int $5;
      if (_c == 46) {
        _success = true;
        $5 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $6;
      if (_success) {
        $6 = _e96($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $6;
        break;
      }
      break;
    }
    return $2;
  }

  int _e102(int $0, bool $1) {
    int $2;
    if (_success) {
      List<int> $3;
      var $4 = false;
      for (;;) {
        int $5;
        if (_c == 32 || _c >= 43 && _c <= 93) {
          _success = true;
          $5 = _c;
          _c = _input[_pos += _c <= 65535 ? 1 : 2];
        } else {
          _success = false;
          if (_fposEnd < _pos) {
            _fposEnd = _pos;
          }
        }
        if (!_success) {
          _success = $4;
          if (!_success) {
            $3 = null;
          }
          break;
        }
        $4 = true;
      }
      if (_success) {
        $2 = $0;
      }
    }
    return $2;
  }

  int _e101(int $0, bool $1) {
    int $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      int $5;
      if (_c == 69 || _c == 101) {
        _success = true;
        $5 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $6;
      if (_success) {
        $6 = _e102($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $6;
        break;
      }
      break;
    }
    return $2;
  }

  num _e81(String $0, bool $1) {
    num $2;
    if (_success) {
      List<int> $3 = _e183(0, true);
      if (_success) {
        var n = $0;
        num $$;
        $$ = num.parse(n);
        $2 = $$;
      }
    }
    return $2;
  }

  String _e74(String $0, bool $1) {
    String $2;
    if (_success) {
      List<int> $3;
      if ($1) {
        $3 = [];
      }
      for (;;) {
        int $4 = _e137(0, true);
        if (!_success) {
          break;
        }
        if ($1) {
          $3.add($4);
        }
      }
      _success = true;
      String $5;
      _success = _c == 34;
      if (_success) {
        $5 = '\"';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      if (_success) {
        List<int> $6 = _e183(0, true);
        if (_success) {
          var c = $3;
          String $$;
          $$ = String.fromCharCodes(c);
          $2 = $$;
        }
      }
    }
    return $2;
  }

  List _e21(int $0, bool $1) {
    List $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      _success = _c == 91;
      if (_success) {
        $5 = '[';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $6;
      if (_success) {
        $6 = _e116($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'[\'');
      }
      List $7;
      if (_success) {
        $7 = _e22($6, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $7;
        break;
      }
      break;
    }
    return $2;
  }

  List _e28(dynamic $0, bool $1) {
    List $2;
    if (_success) {
      List $3;
      if ($1) {
        $3 = [];
      }
      for (;;) {
        var $4 = _e31(0, true);
        if (!_success) {
          break;
        }
        if ($1) {
          $3.add($4);
        }
      }
      _success = true;
      if (_success) {
        var v = $0;
        var n = $3;
        List $$;
        $$ = [v, ...n];
        $2 = $$;
      }
    }
    return $2;
  }

  dynamic _e32(String $0, bool $1) {
    dynamic $2;
    if (_success) {
      dynamic $3 = _e6(0, true);
      if (_success) {
        $2 = $3;
      }
    }
    return $2;
  }

  dynamic _e31(int $0, bool $1) {
    dynamic $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      _success = _c == 44;
      if (_success) {
        $5 = ',';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $6;
      if (_success) {
        $6 = _e124($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\',\'');
      }
      dynamic $7;
      if (_success) {
        $7 = _e32($6, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $7;
        break;
      }
      break;
    }
    return $2;
  }

  String _e124(String $0, bool $1) {
    String $2;
    if (_success) {
      List<int> $3 = _e183(0, true);
      if (_success) {
        $2 = $0;
      }
    }
    return $2;
  }

  List _e27(int $0, bool $1) {
    List $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      _success = _c == 91;
      if (_success) {
        $5 = '[';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $6;
      if (_success) {
        $6 = _e116($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'[\'');
      }
      List $7;
      if (_success) {
        $7 = _e22($6, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      List $8;
      if (_success) {
        $8 = _e28($7, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $8;
        break;
      }
      _fposEnd = -1;
      String $9;
      if (_c == 102) {
        $9 = _matchString('false');
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      dynamic $10;
      if (_success) {
        $10 = _e59($9, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'false\'');
      }
      List $11;
      if (_success) {
        $11 = _e28($10, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $11;
        break;
      }
      _fposEnd = -1;
      String $12;
      if (_c == 110) {
        $12 = _matchString('null');
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      dynamic $13;
      if (_success) {
        $13 = _e66($12, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'null\'');
      }
      List $14;
      if (_success) {
        $14 = _e28($13, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $14;
        break;
      }
      _fposEnd = -1;
      String $15;
      if (_c == 116) {
        $15 = _matchString('true');
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      dynamic $16;
      if (_success) {
        $16 = _e70($15, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'true\'');
      }
      List $17;
      if (_success) {
        $17 = _e28($16, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $17;
        break;
      }
      _fposEnd = -1;
      String $18;
      _success = _c == 123;
      if (_success) {
        $18 = '{';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $19;
      if (_success) {
        $19 = _e108($18, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'{\'');
      }
      Map<String, dynamic> $20;
      if (_success) {
        $20 = _e36($19, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      List $21;
      if (_success) {
        $21 = _e28($20, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $21;
        break;
      }
      _fposEnd = -1;
      var $22 = _pos;
      var $23 = $1;
      $1 = false;
      int $24;
      if (_c == 45) {
        _success = true;
        $24 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      _success = true;
      int $25;
      if (_success) {
        $25 = _e84($24, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      $1 = $23;
      String $26;
      if (_success) {
        $26 = _text.substring($22, _pos);
      }
      num $27;
      if (_success) {
        $27 = _e81($26, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'number\'');
      }
      List $28;
      if (_success) {
        $28 = _e28($27, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $28;
        break;
      }
      _fposEnd = -1;
      String $29;
      _success = _c == 34;
      if (_success) {
        $29 = '\"';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $30;
      if (_success) {
        $30 = _e74($29, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'string\'');
      }
      List $31;
      if (_success) {
        $31 = _e28($30, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $31;
        break;
      }
      break;
    }
    return $2;
  }

  Map<String, dynamic> _e35(int $0, bool $1) {
    Map<String, dynamic> $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      _success = _c == 123;
      if (_success) {
        $5 = '{';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $6;
      if (_success) {
        $6 = _e108($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'{\'');
      }
      Map<String, dynamic> $7;
      if (_success) {
        $7 = _e36($6, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $7;
        break;
      }
      break;
    }
    return $2;
  }

  List<MapEntry<String, dynamic>> _e42(MapEntry<String, dynamic> $0, bool $1) {
    List<MapEntry<String, dynamic>> $2;
    if (_success) {
      List<MapEntry<String, dynamic>> $3;
      if ($1) {
        $3 = [];
      }
      for (;;) {
        var $4 = _e45(0, true);
        if (!_success) {
          break;
        }
        if ($1) {
          $3.add($4);
        }
      }
      _success = true;
      if (_success) {
        var m = $0;
        var n = $3;
        List<MapEntry<String, dynamic>> $$;
        $$ = [m, ...n];
        $2 = $$;
      }
    }
    return $2;
  }

  MapEntry<String, dynamic> _e46(String $0, bool $1) {
    MapEntry<String, dynamic> $2;
    if (_success) {
      MapEntry<String, dynamic> $3 = _e49(0, true);
      if (_success) {
        $2 = $3;
      }
    }
    return $2;
  }

  MapEntry<String, dynamic> _e45(int $0, bool $1) {
    MapEntry<String, dynamic> $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      _success = _c == 44;
      if (_success) {
        $5 = ',';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $6;
      if (_success) {
        $6 = _e124($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\',\'');
      }
      MapEntry<String, dynamic> $7;
      if (_success) {
        $7 = _e46($6, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $7;
        break;
      }
      break;
    }
    return $2;
  }

  List<MapEntry<String, dynamic>> _e41(int $0, bool $1) {
    List<MapEntry<String, dynamic>> $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      _success = _c == 34;
      if (_success) {
        $5 = '\"';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $6;
      if (_success) {
        $6 = _e74($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'string\'');
      }
      MapEntry<String, dynamic> $7;
      if (_success) {
        $7 = _e50($6, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      List<MapEntry<String, dynamic>> $8;
      if (_success) {
        $8 = _e42($7, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $8;
        break;
      }
      break;
    }
    return $2;
  }

  MapEntry<String, dynamic> _e50(String $0, bool $1) {
    MapEntry<String, dynamic> $2;
    if (_success) {
      String $3 = _e127(0, true);
      if (_success) {
        dynamic $4 = _e6(0, true);
        if (_success) {
          var k = $0;
          var v = $4;
          MapEntry<String, dynamic> $$;
          $$ = MapEntry(k, v);
          $2 = $$;
        }
      }
    }
    return $2;
  }

  MapEntry<String, dynamic> _e49(int $0, bool $1) {
    MapEntry<String, dynamic> $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      _success = _c == 34;
      if (_success) {
        $5 = '\"';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $6;
      if (_success) {
        $6 = _e74($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'string\'');
      }
      MapEntry<String, dynamic> $7;
      if (_success) {
        $7 = _e50($6, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $7;
        break;
      }
      break;
    }
    return $2;
  }

  dynamic _e55(dynamic $0, bool $1) {
    dynamic $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  dynamic _e54(int $0, bool $1) {
    dynamic $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      var $5 = _c;
      var $6 = _pos;
      var $7 = _predicate;
      _predicate = true;
      int $8;
      _success = _c < _eof;
      if (_success) {
        $8 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      _c = $5;
      _pos = $6;
      _predicate = $7;
      var $9;
      _success = !_success;
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'end of file\'');
      }
      if (_success) {
        $2 = $9;
        break;
      }
      break;
    }
    return $2;
  }

  dynamic _e58(int $0, bool $1) {
    dynamic $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      if (_c == 102) {
        $5 = _matchString('false');
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      dynamic $6;
      if (_success) {
        $6 = _e59($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'false\'');
      }
      if (_success) {
        $2 = $6;
        break;
      }
      break;
    }
    return $2;
  }

  List<int> _e63(List<int> $0, bool $1) {
    List<int> $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  List<int> _e62(int $0, bool $1) {
    List<int> $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      int $5;
      if (_c >= 9 && _c <= 10 || _c == 13 || _c == 32) {
        _success = true;
        $5 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      List<int> $6;
      if (_success) {
        if ($1) {
          $6 = [];
        }
        for (;;) {
          int $7;
          if (_c >= 9 && _c <= 10 || _c == 13 || _c == 32) {
            _success = true;
            $7 = _c;
            _c = _input[_pos += _c <= 65535 ? 1 : 2];
          } else {
            _success = false;
            if (_fposEnd < _pos) {
              _fposEnd = _pos;
            }
          }
          if (!_success) {
            break;
          }
          if ($1) {
            $6.add($7);
          }
        }
      }
      _success = true;
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (!_success) {
        _fail($4, '\'leading spaces\'');
      }
      if (_success) {
        $2 = $6;
        break;
      }
      break;
    }
    return $2;
  }

  dynamic _e65(int $0, bool $1) {
    dynamic $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      if (_c == 110) {
        $5 = _matchString('null');
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      dynamic $6;
      if (_success) {
        $6 = _e66($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'null\'');
      }
      if (_success) {
        $2 = $6;
        break;
      }
      break;
    }
    return $2;
  }

  dynamic _e69(int $0, bool $1) {
    dynamic $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      if (_c == 116) {
        $5 = _matchString('true');
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      dynamic $6;
      if (_success) {
        $6 = _e70($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'true\'');
      }
      if (_success) {
        $2 = $6;
        break;
      }
      break;
    }
    return $2;
  }

  String _e73(int $0, bool $1) {
    String $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      _success = _c == 34;
      if (_success) {
        $5 = '\"';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $6;
      if (_success) {
        $6 = _e74($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'string\'');
      }
      if (_success) {
        $2 = $6;
        break;
      }
      break;
    }
    return $2;
  }

  num _e80(int $0, bool $1) {
    num $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      var $5 = _pos;
      var $6 = $1;
      $1 = false;
      int $7;
      if (_c == 45) {
        _success = true;
        $7 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      _success = true;
      int $8;
      if (_success) {
        $8 = _e84($7, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      $1 = $6;
      String $9;
      if (_success) {
        $9 = _text.substring($5, _pos);
      }
      num $10;
      if (_success) {
        $10 = _e81($9, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'number\'');
      }
      if (_success) {
        $2 = $10;
        break;
      }
      break;
    }
    return $2;
  }

  String _e107(int $0, bool $1) {
    String $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      _success = _c == 123;
      if (_success) {
        $5 = '{';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $6;
      if (_success) {
        $6 = _e108($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'{\'');
      }
      if (_success) {
        $2 = $6;
        break;
      }
      break;
    }
    return $2;
  }

  String _e112(String $0, bool $1) {
    String $2;
    if (_success) {
      List<int> $3 = _e183(0, true);
      if (_success) {
        $2 = $0;
      }
    }
    return $2;
  }

  String _e111(int $0, bool $1) {
    String $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      _success = _c == 125;
      if (_success) {
        $5 = '}';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $6;
      if (_success) {
        $6 = _e112($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'}\'');
      }
      if (_success) {
        $2 = $6;
        break;
      }
      break;
    }
    return $2;
  }

  String _e115(int $0, bool $1) {
    String $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      _success = _c == 91;
      if (_success) {
        $5 = '[';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $6;
      if (_success) {
        $6 = _e116($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\'[\'');
      }
      if (_success) {
        $2 = $6;
        break;
      }
      break;
    }
    return $2;
  }

  String _e120(String $0, bool $1) {
    String $2;
    if (_success) {
      List<int> $3 = _e183(0, true);
      if (_success) {
        $2 = $0;
      }
    }
    return $2;
  }

  String _e119(int $0, bool $1) {
    String $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      _success = _c == 93;
      if (_success) {
        $5 = ']';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $6;
      if (_success) {
        $6 = _e120($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\']\'');
      }
      if (_success) {
        $2 = $6;
        break;
      }
      break;
    }
    return $2;
  }

  String _e123(int $0, bool $1) {
    String $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      _success = _c == 44;
      if (_success) {
        $5 = ',';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $6;
      if (_success) {
        $6 = _e124($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\',\'');
      }
      if (_success) {
        $2 = $6;
        break;
      }
      break;
    }
    return $2;
  }

  String _e128(String $0, bool $1) {
    String $2;
    if (_success) {
      List<int> $3 = _e183(0, true);
      if (_success) {
        $2 = $0;
      }
    }
    return $2;
  }

  String _e127(int $0, bool $1) {
    String $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      _fposEnd = -1;
      String $5;
      _success = _c == 58;
      if (_success) {
        $5 = ':';
        _c = _input[++_pos];
      } else {
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      String $6;
      if (_success) {
        $6 = _e128($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
        _fail($4, '\':\'');
      }
      if (_success) {
        $2 = $6;
        break;
      }
      break;
    }
    return $2;
  }

  int _e132(int $0, bool $1) {
    int $2;
    if (_success) {
      int $$;
      $$ = $$ - 48;
      $2 = $$;
    }
    return $2;
  }

  int _e131(int $0, bool $1) {
    int $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      int $5;
      if (_c >= 48 && _c <= 57) {
        _success = true;
        $5 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $6;
      if (_success) {
        $6 = _e132($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $6;
        break;
      }
      break;
    }
    return $2;
  }

  int _e135(int $0, bool $1) {
    int $2;
    if (_success) {
      int $$;
      $$ = $$ - 48;
      $2 = $$;
    }
    return $2;
  }

  int _e134(int $0, bool $1) {
    int $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      int $5;
      if (_c >= 49 && _c <= 57) {
        _success = true;
        $5 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $6;
      if (_success) {
        $6 = _e135($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $6;
        break;
      }
      break;
    }
    return $2;
  }

  int _e138(int $0, bool $1) {
    int $2;
    if (_success) {
      int $3 = _e143(0, true);
      if (_success) {
        $2 = $3;
      }
    }
    return $2;
  }

  int _e141(int $0, bool $1) {
    int $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  int _e137(int $0, bool $1) {
    int $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      int $5;
      if (_c == 92) {
        _success = true;
        $5 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $6;
      if (_success) {
        $6 = _e138($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $6;
        break;
      }
      int $7;
      if (_c >= 32 && _c <= 33) {
        _success = true;
        $7 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $7;
        break;
      }
      int $8;
      if (_c >= 35 && _c <= 91) {
        _success = true;
        $8 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $8;
        break;
      }
      int $9;
      if (_c >= 93 && _c <= 1114111) {
        _success = true;
        $9 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $9;
        break;
      }
      break;
    }
    return $2;
  }

  int _e144(int $0, bool $1) {
    int $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  int _e146(int $0, bool $1) {
    int $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  int _e148(int $0, bool $1) {
    int $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  int _e150(int $0, bool $1) {
    int $2;
    if (_success) {
      int $$;
      $$ = 0x8;
      $2 = $$;
    }
    return $2;
  }

  int _e152(int $0, bool $1) {
    int $2;
    if (_success) {
      int $$;
      $$ = 0xC;
      $2 = $$;
    }
    return $2;
  }

  int _e154(int $0, bool $1) {
    int $2;
    if (_success) {
      int $$;
      $$ = 0xA;
      $2 = $$;
    }
    return $2;
  }

  int _e156(int $0, bool $1) {
    int $2;
    if (_success) {
      int $$;
      $$ = 0xD;
      $2 = $$;
    }
    return $2;
  }

  int _e158(int $0, bool $1) {
    int $2;
    if (_success) {
      int $$;
      $$ = 0x9;
      $2 = $$;
    }
    return $2;
  }

  int _e160(int $0, bool $1) {
    int $2;
    if (_success) {
      int $3 = _e163(0, true);
      if (_success) {
        $2 = $3;
      }
    }
    return $2;
  }

  int _e143(int $0, bool $1) {
    int $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      int $5;
      if (_c == 34) {
        _success = true;
        $5 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $5;
        break;
      }
      int $6;
      if (_c == 92) {
        _success = true;
        $6 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $6;
        break;
      }
      int $7;
      if (_c == 47) {
        _success = true;
        $7 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $7;
        break;
      }
      int $8;
      if (_c == 98) {
        _success = true;
        $8 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $9;
      if (_success) {
        $9 = _e150($8, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $9;
        break;
      }
      int $10;
      if (_c == 102) {
        _success = true;
        $10 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $11;
      if (_success) {
        $11 = _e152($10, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $11;
        break;
      }
      int $12;
      if (_c == 110) {
        _success = true;
        $12 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $13;
      if (_success) {
        $13 = _e154($12, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $13;
        break;
      }
      int $14;
      if (_c == 114) {
        _success = true;
        $14 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $15;
      if (_success) {
        $15 = _e156($14, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $15;
        break;
      }
      int $16;
      if (_c == 116) {
        _success = true;
        $16 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $17;
      if (_success) {
        $17 = _e158($16, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $17;
        break;
      }
      int $18;
      if (_c == 117) {
        _success = true;
        $18 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $19;
      if (_success) {
        $19 = _e160($18, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $19;
        break;
      }
      break;
    }
    return $2;
  }

  int _e164(int $0, bool $1) {
    int $2;
    if (_success) {
      int $3 = _e169(0, true);
      if (_success) {
        int $4 = _e169(0, true);
        if (_success) {
          int $5 = _e169(0, true);
          if (_success) {
            var a = $0;
            var b = $3;
            var c = $4;
            var d = $5;
            int $$;
            $$ = a * 0xfff + b * 0xff + c * 0xf + d;
            $2 = $$;
          }
        }
      }
    }
    return $2;
  }

  int _e163(int $0, bool $1) {
    int $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      int $5;
      if (_c >= 97 && _c <= 102) {
        _success = true;
        $5 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $6;
      if (_success) {
        $6 = _e170($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      int $7;
      if (_success) {
        $7 = _e164($6, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $7;
        break;
      }
      int $8;
      if (_c >= 65 && _c <= 70) {
        _success = true;
        $8 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $9;
      if (_success) {
        $9 = _e172($8, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      int $10;
      if (_success) {
        $10 = _e164($9, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $10;
        break;
      }
      int $11;
      if (_c >= 48 && _c <= 57) {
        _success = true;
        $11 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $12;
      if (_success) {
        $12 = _e174($11, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      int $13;
      if (_success) {
        $13 = _e164($12, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $13;
        break;
      }
      break;
    }
    return $2;
  }

  int _e170(int $0, bool $1) {
    int $2;
    if (_success) {
      int $$;
      $$ = $$ - 97;
      $2 = $$;
    }
    return $2;
  }

  int _e172(int $0, bool $1) {
    int $2;
    if (_success) {
      int $$;
      $$ = $$ - 65;
      $2 = $$;
    }
    return $2;
  }

  int _e174(int $0, bool $1) {
    int $2;
    if (_success) {
      int $$;
      $$ = $$ - 48;
      $2 = $$;
    }
    return $2;
  }

  int _e169(int $0, bool $1) {
    int $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      int $5;
      if (_c >= 97 && _c <= 102) {
        _success = true;
        $5 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $6;
      if (_success) {
        $6 = _e170($5, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $6;
        break;
      }
      int $7;
      if (_c >= 65 && _c <= 70) {
        _success = true;
        $7 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $8;
      if (_success) {
        $8 = _e172($7, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $8;
        break;
      }
      int $9;
      if (_c >= 48 && _c <= 57) {
        _success = true;
        $9 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      int $10;
      if (_success) {
        $10 = _e174($9, true);
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $10;
        break;
      }
      break;
    }
    return $2;
  }

  int _e177(int $0, bool $1) {
    int $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  int _e179(int $0, bool $1) {
    int $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  int _e181(int $0, bool $1) {
    int $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  int _e176(int $0, bool $1) {
    int $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      int $5;
      if (_c >= 32 && _c <= 33) {
        _success = true;
        $5 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $5;
        break;
      }
      int $6;
      if (_c >= 35 && _c <= 91) {
        _success = true;
        $6 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $6;
        break;
      }
      int $7;
      if (_c >= 93 && _c <= 1114111) {
        _success = true;
        $7 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $7;
        break;
      }
      break;
    }
    return $2;
  }

  List<int> _e184(List<int> $0, bool $1) {
    List<int> $2;
    if (_success) {
      $2 = $0;
    }
    return $2;
  }

  List<int> _e183(int $0, bool $1) {
    List<int> $2;
    var $3 = _c;
    var $4 = _pos;
    for (;;) {
      int $5;
      if (_c >= 9 && _c <= 10 || _c == 13 || _c == 32) {
        _success = true;
        $5 = _c;
        _c = _input[_pos += _c <= 65535 ? 1 : 2];
      } else {
        _success = false;
        if (_fposEnd < _pos) {
          _fposEnd = _pos;
        }
      }
      List<int> $6;
      if (_success) {
        if ($1) {
          $6 = [];
        }
        for (;;) {
          int $7;
          if (_c >= 9 && _c <= 10 || _c == 13 || _c == 32) {
            _success = true;
            $7 = _c;
            _c = _input[_pos += _c <= 65535 ? 1 : 2];
          } else {
            _success = false;
            if (_fposEnd < _pos) {
              _fposEnd = _pos;
            }
          }
          if (!_success) {
            break;
          }
          if ($1) {
            $6.add($7);
          }
        }
      }
      _success = true;
      if (!_success) {
        _c = $3;
        _pos = $4;
      }
      if (_success) {
        $2 = $6;
        break;
      }
      break;
    }
    return $2;
  }
}

class _Memo {
  final int id;

  final int pos;

  final result;

  final bool success;

  _Memo({
    this.id,
    this.pos,
    this.result,
    this.success,
  });
}
// ignore_for_file: prefer_final_locals
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_local_variable
