// @dart = 2.10
part of '../../parser_generator.dart';

class ParserGenerator {
  final Grammar grammar;

  final ParserGeneratorOptions options;

  ParserGenerator(this.grammar, this.options);

  String generate() {
    return _generate();
  }

  void _addClassParser(List<Spec> specs) {
    final name = options.name + 'Parser';
    final generator = ParserClassGenerator(name, grammar, options);
    final spec = generator.generate();
    specs.add(spec);
  }

  void _addComments(List<Spec> specs) {
    specs.add(Code('// Generated by \'peg2\'\n'));
    specs.add(Code('// https://pub.dev/packages/peg2\n\n'));
  }

  void _addGlobals(List<Spec> specs) {
    final globals = grammar.globals;
    if (globals != null) {
      specs.add(Code(globals));
    }
  }

  void _addHints(List<Spec> specs) {
    final hints = <String>[];
    hints.add('// ignore_for_file: non_constant_identifier_names');
    hints.add('// ignore_for_file: unused_element');
    specs.add(Code(hints.join('\n')));
  }

  String _generate() {
    final specs = <Spec>[];
    _addComments(specs);
    _addGlobals(specs);
    _addClassParser(specs);
    _addHints(specs);
    final library = Library((b) {
      b.body.addAll(specs);
    });

    final emitter = DartEmitter();
    var result = '${library.accept(emitter)}';
    final formatter = DartFormatter();
    result = formatter.format(result);
    return result;
  }
}
